<!DOCTYPE html>
<html>
<head>
	<title>算法</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">

</head>
<body style="background:#CDB38B; ">
	<p>
    <br/>
</p>
<p>
    <br/>
</p>
<p>
    <br/>
</p>
<p>
    <br/>
</p>
<p>
    <strong>1.7 查找技术</strong>
</p>
<p>
    1.7.1 顺序查找
</p>
<p>
    查找就是在某种数据结构中，找出满足指定条件的元素。查找的效率将直接影响到数据处理的效率。通常，根据不同的数据结构，应采用不同的查找方法。
</p>
<p>
    &nbsp; &nbsp; 顺序查找（顺序搜索）是最简单的查找方法，一般是指在线性表中查找指定的元素。它的基本思想是：从线性表的第一个元素开始，逐个将线性表中的元素与被查元素进行比较，如果相等，则查找成功，停止查找；若整个线性表扫描完毕，仍未找到与被查元素相等的元素，则表示线性表中没有要查找的元素，查找失败。
</p>
<p>
    &nbsp; &nbsp; 例如，在一维数组［21，46，25，97，56，76，88］中，查找数据元素97，首先从第1个元素21开始进行比较，与要查找的数据不相等，接着与第2个元素46进行比较，依此类推，当进行到与第4个元素比较时，它们相等，所以查找成功。如果查找数据元素96，则整个线性表扫描完毕，仍未找到与96相等的元素，表示线性表中没有要查找的元素，即为查找失败。
</p>
<p>
    &nbsp; &nbsp; 在最理想的情况下，第一个元素就是要查找的元素，则比较次数为1次。
</p>
<p>
    &nbsp; &nbsp; 在最坏情况下，最后一个元素才是要找的元素，或者在线性表中，没有要查找的元素，则需要与线性表中所有的元素比较，比较次数为n次
</p>
<p>
    &nbsp; &nbsp; 在平均情况下，需要比较n/2次。因此查找算法的时间复杂度为O（n）
</p>
<p>
    &nbsp; &nbsp; 由此可以看出，对于大的线性表来说，顺序查找的效率是很低的。虽然顺序查找法的效率不高，但在以下两种情况中，它是查找运算唯一的选择：
</p>
<p>
    &nbsp; &nbsp; ①线性表为无序表（即表中的元素是无序的），则不管是顺序存储，还是链式存储结构，都只能用顺序查找。
</p>
<p>
    &nbsp; &nbsp; ②即使线性表是有序的，如果采用链式存储结构，也只能用顺序查找。
</p>
<p>
    <br/>
</p>
<p>
    1.7.2 二分法查找
</p>
<p>
    二分法查找也称拆半查找，是一种高效的查找方法。能使用二分法查找的线性表必须满足两个条件：一是用顺序存储结构；二是线性表是有序表。
</p>
<p>
    &nbsp; &nbsp; 在此所说的有序表是指线性表中的元素按值非递减排列（即从小到大，但允许相邻元素值相等）。
</p>
<p>
    &nbsp; &nbsp; 对于长度为n的有序线性表，利用二分法查找元素X的过程如下。
</p>
<p>
    &nbsp; &nbsp; 将X与线性表的中间项比较：
</p>
<p>
    &nbsp; &nbsp; ●如果X的值与中间项的值相等，则查找成功，结束查找；
</p>
<p>
    &nbsp; &nbsp; ●如果X小于中间项的值，则在线性表的前半部分以二分法继续查找；
</p>
<p>
    &nbsp; &nbsp; ●如果X大于中间项的值，则在线性表的后半部分以二分法继续查找。
</p>
<p>
    &nbsp; &nbsp; 例如，长度为8的线性表关键码序列为：［6，17，28，30，38，44，47，68］，被查元素为38，首先将其与线性表的中间项比较，即与第4个数据元素30相比较，38大于中间项30的值，则在线性表［38，44，47，68］中继续查找；接着与中间项比较，即与第2个元素44相比较，38小于44，则在线性表［38］中继续查找，最后一次比较相等，查找成功。
</p>
<p>
    &nbsp; &nbsp; 顺序查找法每一次比较，只将查找范围减少1，而二分法查找，每比较一次，可将查找范围减少为原来的一半，效率大大提高。
</p>
<p>
    &nbsp; &nbsp; 可以证明，对于长度为n的有序线性表，在最坏情况下，二分法查找只需比较log2n次，而顺序查找需要比较n次。
</p>
<p>
    <br/>
</p>
<p>
    <br/>
</p>
<p>
    &nbsp; &nbsp;
</p>
<p>
    <br/>
</p>

</body>
</html>

